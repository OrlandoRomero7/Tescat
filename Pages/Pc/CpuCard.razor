
<FormSection Title="Procesador">
    <EditForm EditContext="cpuContext">
        @if (cpu.IdCpu != Guid.Empty && !stockComponent)
        {
            <button type="button" class="btn btn-danger" @onclick="FunctionCallShowModal">Quitar</button>
        }
        <div class="row mb-3">
            <div class="col-md-4">
                <label class="form-label">Modelo</label>
                <InputText class="form-control" @bind-Value="cpu.Model" />
            </div>
            <div class="col-md-4">
                <label class="form-label">Socket</label>
                <InputText class="form-control" @bind-Value="cpu.Socket" />
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <label class="form-label">Benchmark</label>
                <InputNumber class="form-control" @bind-Value="cpu.Benchmark" />
            </div>
        </div>
    </EditForm>
</FormSection>

@code {
    [Parameter]
    public Cpu cpu { get; set; }

    [Parameter]
    public EditContext cpuContext { get; set; }

    [Parameter]
    public Action confirmationModalChild { get; set; }

    [Parameter]
    public bool stockComponent { get; set; } = false;

    [Parameter]
    public Action confirmationModalDelete { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        
    }

    public void FunctionCallShowModal()
    {
        confirmationModalChild?.Invoke();
    }

}

