@page "/devices"
@using Tescat.Services.Pcs
@inject IPcService PcService
@inject NavigationManager NavigationManager

@if (pcs is null)
{

    <p>Cargando Dispositivos...</p>

}
else
{
    <button type="button" class="btn btn-primary" @onclick="navigateToAddDevice">Agregar Equipo</button>
    <br />
    <br />
    @*<div class="card">
        <div class="card-body">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Id Usuario</th>
                        <th scope="col">Tipo de PC</th>
                        <th scope="col">Nombre de PC</th>
                        <th scope="col">Ram Usadas</th>
                        <th scope="col">Accion</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var pc in pcs)
                    {
                        <tr>
                            <td>@pc.IdUser</td>
                            <td>@pc.PcType</td>
                            <td>@pc.PcName</td>
                            <td>@pc.UsedRamSlots</td>
                            <td><button type="button" class="btn btn-info" @onclick="() => navigateToPcDetails(pc.IdPc)">Ver</button></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>*@
    <RadzenDataGrid AllowVirtualization="true" AllowFiltering="true" AllowColumnResize="true"
                    FilterMode="FilterMode.Simple" PageSize="10" AllowPaging="true" AllowSorting="true" Data="@pcs" >
        <Columns>
            <RadzenDataGridColumn TItem="Pc" Property="IdUserNavigation.Name" Title="Nombre de Usuario"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Pc" Property="PcType" Title="Tipo"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Pc" Property="PcName" Title="Nombre de PC"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Pc" Title="Acción" Sortable="false">
                <Template Context="item">
                    <button type="button" class="btn btn-info" @onclick="() => navigateToPcDetails(item.IdPc)">Ver</button>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
    

}

@code {
    private List<Pc> pcs { get; set; }
    LogicalFilterOperator logicalFilterOperator = LogicalFilterOperator.And;
    FilterCaseSensitivity filterCaseSensitivity = FilterCaseSensitivity.CaseInsensitive;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            pcs = await PcService.GetAllPc();

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Hubo un problema al cargar la informacion de los equipos{ex.Message}");
        }
    }
    private void navigateToPcDetails(Guid IdPc)
    {
        NavigationManager.NavigateTo("/pcDetails/" + IdPc);
    }
    private void navigateToAddDevice()
    {
        NavigationManager.NavigateTo("/addDevice/");
    }
}
