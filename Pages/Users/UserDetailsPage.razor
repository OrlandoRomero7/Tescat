﻿
@page "/userDetails"
@page "/userDetails/{id:int}"
@using Tescat.Services.UserCredentials;
@using Tescat.Services.Users;
@*@using Tescat.Models;*@
@using Tescat.Pages.Users.UserForms
@inject IUserService UserService
@inject IUserCredentialService UserCredentialService
@inject OtherServices OtherServices


@if (user.IdUser == 0)
{
    <button type="button" class="btn btn-primary" @onclick="CreateUser">Crear</button>
}
else
{
    <button type="button" class="btn btn-primary" @onclick="Update">Actulizar</button>
}


@if (user.Name != null)
{
    <button type="button" class="btn btn-danger">Borrar</button>
}


<!-- Card de Informacion Basica -->
<BasicInformation user="user" id="id" tempName="@tempName" areas="areas"></BasicInformation>
@*<FormSection Title="Informacíón Basica">
    <EditForm Model="@user" OnValidSubmit="Update">
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="input1" class="form-label">Nombre Completo</label>
                <InputText class="form-control" @bind-Value="@tempName" />


            </div>

            <div class="col-md-6">
                <label for="input2" class="form-label">Departamento</label>
                <InputSelect class="form-select" @bind-Value="departament"></InputSelect>

            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <input class="form-check-input" type="radio" name="radioGroup" id="radio1" value="option1">
                <label class="form-check-label" for="radio1">Masculino</label>
                <input class="form-check-input" type="radio" name="radioGroup" id="radio2" value="option2">
                <label class="form-check-label" for="radio2">Femenino</label>
            </div>

        </div>
        <div class="row g-3">
            <div class="col-md-3">
                <label for="input1" class="form-label">Fecha de Ingreso</label>
                <select class="form-select" aria-label="Default select example">
                    <option selected>Selecciona una opcion</option>
                    <option value="1">One</option>
                    <option value="2">Two</option>
                    <option value="3">Three</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="input2" class="form-label">-</label>
                <select class="form-select" aria-label="Default select example">
                    <option selected>Selecciona una opcion</option>
                    <option value="1">One</option>
                    <option value="2">Two</option>
                    <option value="3">Three</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="input3" class="form-label">-</label>
                <select class="form-select" aria-label="Default select example">
                    <option selected>Selecciona una opcion</option>
                    <option value="1">One</option>
                    <option value="2">Two</option>
                    <option value="3">Three</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="input4" class="form-label">Oficina</label>
                <select class="form-select" aria-label="Default select example">
                    <option selected>Selecciona una opcion</option>
                    <option value="1">One</option>
                    <option value="2">Two</option>
                    <option value="3">Three</option>
                </select>
            </div>

        </div>
        <div class="row g-3">
            <div class="col-md-3">
                <label for="input1" class="form-label">Puesto</label>

                <InputSelect class="form-select" @bind-Value="user.Area">

                    @if (areas != null && areas.Length > 0)
                    {
                        @foreach (var area in areas)
                        {
                            <option value="@area">@area</option>
                        }

                    }
                </InputSelect>
            </div>
        </div>
        @if (user.IdUser == 0)
        {
            <div class="row g-3">
                <div class="col-md-3">
                    <label for="input1" class="form-label">ID</label>
                    <InputNumber @bind-Value="@id"></InputNumber>
                </div>
            </div>
        }
        else
        {
            <div class="row g-3">
                <div class="col-md-3">
                    <label for="input1" class="form-label">ID</label>
                    <InputNumber @bind-Value="user.IdUser"></InputNumber>
                </div>
            </div>
        }
        <button type="submit" class="btn btn-primary">Actulizar</button>

    </EditForm>
</FormSection>*@


<!-- Card de Informacion de Contacto -->
<FormSection Title="Información de Contacto">
    <EditForm Model="@user">
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="input1" class="form-label">Extension</label>
                <InputNumber class="form-control" @bind-Value="user.Tel"></InputNumber>
            </div>

            <div class="col-md-6">
                <label for="input2" class="form-label">Numero de celular</label>
                <InputText class="form-control" @bind-Value="cel"></InputText>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="input1" class="form-label">Correo(s)</label>
                <InputSelect class="form-select" @bind-Value="email">

                </InputSelect>
            </div>
        </div>
    </EditForm>
</FormSection>

@if (userCredential != null)
{
    <!-- Card Cuentas de Usuario -->
    <FormSection Title="Cuentas de Usuario">
        <EditForm Model="@user">
            @if (userCredential.PortalUser != null)
            {
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Usuario Portal</label>
                        <InputText class="form-control" @bind-Value="userCredential.PortalUser"></InputText>
                    </div>

                    <div class="col-md-6">
                        <label class="form-label">Contraseña</label>
                        <InputText class="form-control" @bind-Value="userCredential.PortalPass"></InputText>
                    </div>
                </div>
            }
            @if (userCredential.CasaUser != null)
            {
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Usuario Casa</label>
                        <InputText class="form-control" @bind-Value="userCredential.CasaUser"></InputText>
                    </div>

                    <div class="col-md-6">
                        <label class="form-label">Contraseña</label>
                        <InputText class="form-control" @bind-Value="userCredential.CasaPass"></InputText>
                    </div>
                </div>
            }
            @if (userCredential.MozartUser != null)
            {
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Usuario Casa</label>
                        <InputText class="form-control" @bind-Value="userCredential.MozartUser"></InputText>
                    </div>

                    <div class="col-md-6">
                        <label class="form-label">Contraseña</label>
                        <InputText class="form-control" @bind-Value="userCredential.MozartPass"></InputText>
                    </div>
                </div>
            }
            @if (userCredential.DarwinUser != null)
            {
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Usuario Casa</label>
                        <InputText class="form-control" @bind-Value="userCredential.DarwinUser"></InputText>
                    </div>

                    <div class="col-md-6">
                        <label class="form-label">Contraseña</label>
                        <InputText class="form-control" @bind-Value="userCredential.DarwinPass"></InputText>
                    </div>
                </div>
            }
            @if (userCredential.VpnUser != null)
            {
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Usuario Casa</label>
                        <InputText class="form-control" @bind-Value="userCredential.VpnUser"></InputText>
                    </div>

                    <div class="col-md-6">
                        <label class="form-label">Contraseña</label>
                        <InputText class="form-control" @bind-Value="userCredential.VpnPass"></InputText>
                    </div>
                </div>
            }

        </EditForm>
    </FormSection>

}


@code {
    [Parameter]
    public int id { get; set; }

    public User user = new User();
    private UserCredential userCredential = new UserCredential();

    public string? tempName { get; set; }
    public string[]? areas;


    // Solo los hice temporalmente para los @bind-Value
    public string? cel;
    public string? email;
    public string? userPortal;
    public string? departament;


    protected override async Task OnInitializedAsync()
    {
        //revisar este if
        
        if (id != 0)
        {
            user = await UserService.GetUserId(id);
            tempName = user.Name;
            areas = await OtherServices.prueba();
            userCredential = await UserCredentialService.GetUserCredentials(id);
        }

    }
    //Para cambiar esta lista a que sea todos los tipos de Areas que existen en la bd se ocupa consultar en el componenetes todos los Users y traerse las areas
    /*
    private List<string> departaments = new List<string>
    {
        "Trafico", "Impo. Temporal", "Impo. Definitiva", "Exportacion", "Sistemas", "Supervisor Administrativo",
        "Cobranza", "Facturacion/Exportacion", "Liberaciones", "Proveedores", "Contabilidad", "Captura", "Liberaciones/ Impo. Temporal", "Administracion", "Cuentas de Gastos"
    };
    */
    
    private async Task CreateUser()
    {
        try
        {
            if (user.IdUser == 0)
            {
                user.IdUser = id;
                await UserService.InsertUser(user);
                Console.WriteLine("Se creo correctamente");
            }
        }
        catch (ArgumentException e)
        {
            Console.WriteLine($"Fallo la creacion del usuario {e.Message}");
        }

    }
    private async Task Update()
    {
        try
        {
            if (user.IdUser != 0)
            {
                user.Name = tempName;
                await UserService.UpdateUser(user);
                Console.WriteLine("Se actualizo correctamente");
            }
        }
        catch (ArgumentException e)
        {
            Console.WriteLine($"Fallo actulizar el usuario {e.Message}");
        }

    }

}
