@page "/users"
@inject IUserService UserService
@inject OtherServices OtherServices
@inject TescatDbContext Context
@inject NavigationManager NavigationManager
@using System.Reflection;





<UserHomePageControls></UserHomePageControls>



<div class="cards container">
    <div style="row-gap:4rem; justify-content:center; display:grid; grid-template-columns: 1fr 1fr 1fr">

        @if (Users == null)
        {
            <p>Loading users...</p>
        }
        else
        {
            @foreach (var user in Users)
            {
                <UserCard User="user"></UserCard>
            }
        }
    </div>
</div>


@if (showAlert)
{
    <div class="overlay-alert">
        <div class="alert alert-success flex-reverse" role="alert">
            <button type="button" class="btn-close" @onclick="CloseAlert" aria-label="Close"></button>
            @localMessage
        </div>
    </div>
}



@code
{
    private List<User>? Users { get; set; }
    public string? localMessage;
    private bool showAlert = false;



    protected override async
       Task OnInitializedAsync()
    {
        try
        {
            Users = await UserService.GetAllUsers();

            localMessage = OtherServices.Message;
            if (localMessage != null) await ShowAndHideAlert();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Hubo un problema al cargar la informacion de los usuarios{ex.Message}");
        }
    }


    protected void CreateNewUser()
    {
        NavigationManager.NavigateTo("/addUser");
    }



    private void CloseAlert()
    {
        showAlert = false;
    }


    private async Task ShowAndHideAlert()
    {
        showAlert = true;
        StateHasChanged();

        await Task.Delay(5000);

        showAlert = false;
        StateHasChanged();
    }







}
