@inject IJSRuntime JSRuntime

@*@if (user != null && user.IdUser == 0)
{
    <button type="button" class="btn btn-primary" @onclick="SubmitForm">Crear</button>

}
else
{
    <button type="button" class="btn btn-primary">Actulizar</button>
    <button type="button" class="btn btn-danger">Borrar</button>

}*@



<FormSection Title="Informacíón Basica">
    <EditForm Model="@user" OnValidSubmit="SomeMethodInsideComponent" id="myForm">
        <DataAnnotationsValidator />
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="input1" class="form-label">Nombre Completo</label>
                <InputText class="form-control" @bind-Value="user.Name" />
                <ValidationMessage For="@(() => user.Name)" />
            </div>

            <div class="col-md-6">
                <label for="input2" class="form-label">Departamento</label>
                <InputSelect class="form-select" @bind-Value="user.Dept">
                    @if (departaments != null && departaments.Length > 0)
                    {
                        <option selected disabled>Selecciona una opción</option>
                        @foreach (var departament in departaments)
                        {
                            <option value="@departament">@departament</option>
                        }

                    }
                </InputSelect>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <input class="form-check-input" type="radio" name="radioGroup" id="radio1" value="option1">
                <label class="form-check-label" for="radio1">Masculino</label>
                <input class="form-check-input" type="radio" name="radioGroup" id="radio2" value="option2">
                <label class="form-check-label" for="radio2">Femenino</label>
            </div>

        </div>
        <div class="row g-3">
            <div class="col-md-3">
                <label for="input1" class="form-label">Fecha de Ingreso</label>
                <InputDate class="form-control" @bind-Value="user.EntryDate"></InputDate>
            </div>
            
            
            <div class="col-md-3">
                <label for="input4" class="form-label">Oficina</label>
                <InputSelect class="form-select" @bind-Value="user.Office">
                    <option selected disabled>Selecciona una opción</option>
                    @foreach (var ofi in Oficina)
                    {
                        <option value="@ofi">@ofi</option>
                    }
                </InputSelect>
            </div>

            <div class="col-md-3">
                <label for="input1" class="form-label">Area</label>

                <InputSelect class="form-select" @bind-Value="user.Area">

                    @if (areas != null && areas.Length > 0)
                    {
                        <option selected disabled>Selecciona una opción</option>
                        @foreach (var area in areas)
                        {
                            <option value="@area">@area</option>
                        }

                    }
                </InputSelect>
                <ValidationMessage For="@(() => user.Area)" />
            </div>
            <div class="col-md-3">
                @if (user.IdUser == 0)
                {
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label for="input1" class="form-label">ID</label>
                            <InputNumber  @bind-Value="id"></InputNumber>
                        </div>
                    </div>
                }
                else
                {
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label for="input1" class="form-label">ID</label>
                            <InputNumber  @bind-Value="user.IdUser"></InputNumber>
                        </div>
                    </div>
                }
            </div>


        </div>
        
    </EditForm>
</FormSection>




@code {
    [Parameter]
    public User? user
    { get; set; }

    public List<String> Oficina = new List<string>
    {
        "Ensenada","Tijuana","Mexicali"
    };
    public string? officeSelected { get; set; }


    [Parameter]
    public int id { get; set; }
    /*
    [Parameter]
    public string? tempName { get; set; } 
    */
    [Parameter]
    public string[]? areas { get; set; } = default!;

    [Parameter]
    public string[]? departaments { get; set; } = default!;

    [Parameter] 
    public EventCallback CreateUserCallback { get; set; }


    
    private async Task SomeMethodInsideComponent()
    {
        if (CreateUserCallback.HasDelegate)
        {
            await CreateUserCallback.InvokeAsync(null);
        }
    }

    public void SubmitFromParent()
    { 
        // Usa JSRuntime para disparar el envío del formulario
        JSRuntime.InvokeVoidAsync("submitFormById", "myForm");
    }
    

}
