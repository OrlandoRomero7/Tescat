@page "/pcCredential"
@page "/pcCredential/{id:guid}"


@if (pcCredential != null)
{
    if (pcCredential.IdPc != Guid.Empty)
    {
        <button type="button" class="btn btn-primary" @onclick="UpdatePcCredential" disabled="@(!ExistsChanges)">Actulizar</button>

    }
    else if (pcCredential.IdPc == Guid.Empty)
    {
        <button type="button" class="btn btn-primary" @onclick="CreatePcCredential">Crear</button>
    }
    if (inputsIsDisabled == true)
    {
        <button type="button" class="btn btn-primary" @onclick="EnableEditForm">Editar</button>
    }
    else
    {
        <button type="button" class="btn btn-primary" @onclick="DisableEditForm">Cancelar Edicion</button>
    }

    <FormSection Title="Credenciales de la computadora">
        <EditForm EditContext="CredentialContext">
            <div class="row mb-3">
                <div class="col-md-4">
                    <label class="form-label">Nombre de Usuario de Pc</label>
                    <InputText class="form-control" @bind-Value="pcCredential.PcUser" disabled="@inputsIsDisabled"></InputText>
                </div>

                <div class="col-md-4">
                    <label class="form-label">Contraseña</label>
                    <InputText class="form-control" @bind-Value="pcCredential.PcPassword" disabled="@inputsIsDisabled"></InputText>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-4">
                    <label class="form-label">ID AnyDesk</label>
                    <InputText class="form-control" @bind-Value="pcCredential.IdAnydesk" disabled="@inputsIsDisabled"></InputText>
                </div>

                <div class="col-md-4">
                    <label class="form-label">Contraseña</label>
                    <InputText class="form-control" @bind-Value="pcCredential.AnydeskPass" disabled="@inputsIsDisabled"></InputText>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-4">
                    <label class="form-label">Nombre de Usuario del Comun</label>
                    <InputText class="form-control" @bind-Value="pcCredential.ComunUser" disabled="@inputsIsDisabled"></InputText>
                </div>

                <div class="col-md-4">
                    <label class="form-label">Contraseña</label>
                    <InputText class="form-control" @bind-Value="pcCredential.ComunPass" disabled="@inputsIsDisabled"></InputText>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-4">
                    <label class="form-label">Nombre de Usuario del Mozart</label>
                    <InputText class="form-control" @bind-Value="pcCredential.MozartRdpUser" disabled="@inputsIsDisabled"></InputText>
                </div>

                <div class="col-md-4">
                    <label class="form-label">Contraseña</label>
                    <InputText class="form-control" @bind-Value="pcCredential.MozartRdpPass" disabled="@inputsIsDisabled"></InputText>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-4">
                    <label class="form-label">Nombre de Usuario del Darwin</label>
                    <InputText class="form-control" @bind-Value="pcCredential.DarwinVantecUser" disabled="@inputsIsDisabled"></InputText>
                </div>

                <div class="col-md-4">
                    <label class="form-label">Contraseña</label>
                    <InputText type="password" class="form-control" @bind-Value="pcCredential.DarwinVantecPass" disabled="@inputsIsDisabled"></InputText>
                </div>
            </div>
        </EditForm>
    </FormSection>
}


@code {
    [Parameter]
    public Guid id { get; set; }
    EditContext CredentialContext;
    public PcCredential pcCredential { get; set; }
    public PcCredential pcCredentialOriginal;

    private bool ExistsChanges;
    private bool inputsIsDisabled = true;

    protected override async Task OnInitializedAsync()
    {
        if (id != Guid.Empty)
        {
            pcCredential = await PcCredentialService.GetPcCredentialId(id);
            //pcCredentialOriginal = await PcCredentialService.GetPcCredentialId(id);
            pcCredentialOriginal = (PcCredential)pcCredential.Clone();
            CredentialContext = new EditContext(pcCredential);
            CredentialContext.OnFieldChanged += (sender, e) => OnFormChanged();

        }
    }
    private void OnFormChanged()
    {
        //retornara un true, es lo mismo que decir que sea igual a true
        ExistsChanges = CredentialContext.IsModified();
    }


    public async Task UpdatePcCredential()
    {

        pcCredential = await PcCredentialService.UpdatePcCredential(pcCredential);
        pcCredentialOriginal = (PcCredential)pcCredential.Clone();
        ExistsChanges = false;


    }
    public async Task CreatePcCredential()
    {
        pcCredential.IdPc = id;
        pcCredential = await PcCredentialService.InsertPcCredential(pcCredential);
    }

    public void EnableEditForm()
    {
        inputsIsDisabled = false;
    }
    public void DisableEditForm()
    {
        pcCredential = (PcCredential)pcCredentialOriginal.Clone();
        CredentialContext.MarkAsUnmodified();
        inputsIsDisabled = true;
    }

}
